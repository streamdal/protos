syntax = "proto3";

package protos;

import "steps/custom.proto";
import "steps/decode.proto";
import "steps/detective.proto";
import "steps/encode.proto";
import "steps/transform.proto";

option go_package = "github.com/streamdal/snitch-protos/build/go/protos";

// Pipeline is a structure that holds one or more pipeline steps. This structure
// is intended to be immutable; clients are expected to generate WASMRequest's
// that contain a pipeline step.
message Pipeline {
  // Unique ID for the pipeline
  string id = 1;

  // Friendly name for the pipeline
  string name = 2;

  // One or more steps to execute
  repeated PipelineStep steps = 3;
}

// A condition defines how the SDK should handle a step response -- should it
// continue executing the pipeline, should it abort, should it notify the server?
// Each step can have multiple conditions.
enum PipelineStepCondition {
  CONDITION_UNSET = 0;
  CONDITION_CONTINUE = 1;
  CONDITION_ABORT = 2;
  CONDITION_NOTIFY = 3;
}

// A pipeline step is a single step in a pipeline.
message PipelineStep {
  // Unique ID for the step
  string id = 1;

  // Friendly name for the step
  string name = 2;

  // What should SDK do if step succeeds?
  repeated PipelineStepCondition on_success = 3;

  // What should SDK do if step fails?
  repeated  PipelineStepCondition on_failure = 4;

  oneof step {
    steps.DetectiveStep detective = 1000;
    steps.TransformStep transform = 1001;
    steps.EncodeStep encode = 1002;
    steps.DecodeStep decode = 1003;
    steps.CustomStep custom = 1004;
  }

  // WASM module ID (set by snitch-server)
  string _wasm_id = 10000;

  // WASM module bytes (set by snitch-server)
  bytes _wasm_bytes = 10001;

  // WASM function name to execute (set by snitch-server)
  string _wasm_function = 10002;
}
